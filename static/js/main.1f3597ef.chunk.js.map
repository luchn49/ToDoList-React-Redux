{"version":3,"sources":["Components/Search/SearchTask.jsx","Actions/taskActions.js","Components/Sort/SortTask.jsx","Components/TaskModal/TaskModal.jsx","Components/TaskItem/TaskItem.jsx","Components/TaskList/TaskList.jsx","Components/TaskControl.jsx","App.js","serviceWorker.js","Reducers/TaskListReducer.js","Reducers/SearchTaskReducer.js","Reducers/SortTaskReducer.js","Reducers/EditTaskReducer.js","Reducers/rootReducer.js","index.js"],"names":["SearchTask","onHandleChange","e","props","target","value","className","type","placeholder","onChange","this","Component","connect","dispatchEvent","name","keyWord","SortTask","getValueSort","by","onSortTask","id","data-toggle","aria-labelledby","href","onClick","state","dispatch","action","TaskModal","setState","onSaveTask","onAddTask","onResetModal","taskName","taskStatus","taskNote","SelectedTask","data-target","tabIndex","role","data-dismiss","aria-hidden","htmlFor","rows","nextProps","prevState","_","isEmpty","isEqual","newTask","TaskItem","onDeleteTask","task","onEditTask","onChangeStatus","stt","scope","TaskList","renderTask","sort","a","b","toLowerCase","SearchList","filter","indexOf","colSpan","map","index","key","TaskControl","App","Boolean","window","location","hostname","match","uuidv4","require","data","JSON","parse","localStorage","getItem","initialState","TaskListReducer","newTaskList","findIndex","setItem","stringify","newState","newStateAfterDel","console","log","EditTask","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f3597ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../../Actions/taskActions\";\r\n\r\nexport class SearchTask extends Component {\r\n  onHandleChange = e => {\r\n    this.props.SearchTask(e.target.value);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"col-7\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Tìm tên...\"\r\n          onChange={this.onHandleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatchEvent => {\r\n  return {\r\n    SearchTask: name => {\r\n      dispatchEvent(action.searchTask(name));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchTask);\r\n","\r\nexport const onSaveTask = newTask => {\r\n    return {\r\n        type: \"SAVE_TASK\",\r\n        newTask\r\n    }\r\n}\r\nexport const changeStatus = (id) => {\r\n    return {\r\n        type: \"CHANGE_STATUS_TASK\",\r\n        id\r\n    }\r\n}\r\nexport const deleteTask = (id) => {\r\n    return {\r\n        type: \"DELETE_TASK\",\r\n        id\r\n    }\r\n}\r\nexport const editTask = (task) => {\r\n    return {\r\n        type: \"EDIT_TASK\",\r\n        task\r\n    }\r\n}\r\nexport const searchTask = (keyWord) => {\r\n    return {\r\n        type: \"SEARCH\",\r\n        keyWord\r\n    }\r\n}\r\nexport const sortTask = (SortTask) => {\r\n    return {\r\n        type: \"SORT\",\r\n        SortTask\r\n    }\r\n}\r\nexport const removeEditStaff = () => {\r\n    return {\r\n        type: \"REMOVE_EDIT_TASK\"\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport * as action from \"../../Actions/taskActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class SortTask extends Component {\r\n  getValueSort = (by, value) => {\r\n    let SortTask = {\r\n      by: by,\r\n      value: value\r\n    };\r\n    this.props.onSortTask(SortTask);\r\n  };\r\n  render() {\r\n    const { SortTask } = this.props;\r\n    return (\r\n      <div className=\"col-2 d-flex justify-content-end\">\r\n        <div className=\"Sort\">\r\n          <button\r\n            className=\"btn btn-secondary dropdown-toggle ml-auto\"\r\n            type=\"button\"\r\n            id=\"dropdownMenuButton\"\r\n            data-toggle=\"dropdown\"\r\n          >\r\n            Sắp Xếp\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <a\r\n              href=\"#a\"\r\n              className={\r\n                SortTask.by === \"name\" && SortTask.value === 1\r\n                  ? \"dropdown-item sort_selected\"\r\n                  : \"dropdown-item\"\r\n              }\r\n              onClick={() => {\r\n                this.getValueSort(\"name\", 1);\r\n              }}\r\n            >\r\n              <span className=\"d-inline-block dropdown-item \">\r\n                <i className=\"fa fa-sort-alpha-down pr-2 \" />\r\n                Tên A-Z\r\n              </span>\r\n            </a>\r\n            <a\r\n              href=\"#a\"\r\n              className={\r\n                SortTask.by === \"name\" && SortTask.value === -1\r\n                  ? \"dropdown-item sort_selected\"\r\n                  : \"dropdown-item\"\r\n              }\r\n              onClick={() => {\r\n                this.getValueSort(\"name\", -1);\r\n              }}\r\n            >\r\n              <span className=\" d-inline-block dropdown-item\">\r\n                <i className=\"fa fa-sort-alpha-up pr-2\" />\r\n                Tên Z-A\r\n              </span>\r\n            </a>\r\n            <a\r\n              href=\"#a\"\r\n              className={\r\n                SortTask.by === \"status\" && SortTask.value === -1\r\n                  ? \"dropdown-item sort_selected border-top\"\r\n                  : \"dropdown-item border-top\"\r\n              }\r\n              onClick={() => {\r\n                this.getValueSort(\"status\", -1);\r\n              }}\r\n            >\r\n              <span className=\"d-inline-block dropdown-item\">\r\n                <i className=\"fa fa-long-arrow-alt-down pr-2\" />\r\n                Mức độ\r\n              </span>\r\n            </a>\r\n            <a\r\n              href=\"#a\"\r\n              className={\r\n                SortTask.by === \"status\" && SortTask.value === 1\r\n                  ? \"dropdown-item sort_selected\"\r\n                  : \"dropdown-item\"\r\n              }\r\n              onClick={() => {\r\n                this.getValueSort(\"status\", 1);\r\n              }}\r\n            >\r\n              <span className=\"d-inline-block dropdown-item\">\r\n                <i className=\"fa fa-long-arrow-alt-up pr-2\" />\r\n                Mức độ\r\n              </span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSortTask: SortTask => {\r\n      dispatch(action.sortTask(SortTask));\r\n    }\r\n  };\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    SortTask: state.SortTask\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport * as action from \"../../Actions/taskActions\";\r\n\r\nexport class TaskModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      taskName: \"\",\r\n      taskStatus: \"\",\r\n      taskNote: \"\",\r\n      SelectedTask: {}\r\n    };\r\n  }\r\n\r\n  onHandleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSaveTask = () => {\r\n    this.props.onSaveTask(this.state);\r\n  };\r\n  onAddTask = () => {\r\n    this.props.onAddTask();\r\n  };\r\n  onResetModal = () => {\r\n    this.setState({\r\n      id: \"\",\r\n      taskName: \"\",\r\n      taskStatus: \"\",\r\n      taskNote: \"\",\r\n      SelectedTask: {}\r\n    });\r\n  };\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (\r\n      !_.isEmpty(nextProps.SelectedTask) &&\r\n      !_.isEqual(nextProps.SelectedTask, prevState.SelectedTask)\r\n    ) {\r\n      return {\r\n        SelectedTask: nextProps.SelectedTask,\r\n        id: nextProps.SelectedTask.id,\r\n        taskName: nextProps.SelectedTask.taskName,\r\n        taskStatus: nextProps.SelectedTask.taskStatus,\r\n        taskNote: nextProps.SelectedTask.taskNote\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-3 d-flex\">\r\n        <div className=\"task_modal\">\r\n          {/* Button trigger modal */}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#taskModal\"\r\n            onClick={() => {\r\n              this.onAddTask();\r\n              this.onResetModal();\r\n            }}\r\n          >\r\n            Thêm công việc\r\n          </button>\r\n          {/* Modal */}\r\n          <div\r\n            className=\"modal fade\"\r\n            id=\"taskModal\"\r\n            tabIndex={-1}\r\n            role=\"dialog\"\r\n          >\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    {this.state.id ? \"Cập nhật công việc\" : \"Thêm công việc\"}\r\n                  </h5>\r\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"exampleFormControlInput1\">\r\n                        Tên công việc\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleFormControlInput1\"\r\n                        onChange={this.onHandleChange}\r\n                        value={this.state.taskName}\r\n                        name=\"taskName\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"exampleFormControlSelect1\">Mức độ</label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        id=\"exampleFormControlSelect1\"\r\n                        onChange={this.onHandleChange}\r\n                        value={this.state.taskStatus}\r\n                        name=\"taskStatus\"\r\n                      >\r\n                        <option>Vui lòng chọn</option>\r\n                        <option>Cao</option>\r\n                        <option>Thấp</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"exampleFormControlTextarea1\">\r\n                        Ghi chú\r\n                      </label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        rows={2}\r\n                        onChange={this.onHandleChange}\r\n                        value={this.state.taskNote}\r\n                        name=\"taskNote\"\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Thoát\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-info\"\r\n                    onClick={this.onSaveTask}\r\n                  >\r\n                    Lưu\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    SelectedTask: state.SelectedTask\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatchEvent => {\r\n  return {\r\n    onSaveTask: newTask => {\r\n      dispatchEvent(action.onSaveTask(newTask));\r\n    },\r\n    onAddTask: () => {\r\n      dispatchEvent(action.removeEditStaff());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskModal);\r\n","import React, { Component } from \"react\";\r\n\r\nclass TaskItem extends Component {\r\n  onDeleteTask = () => {\r\n    this.props.onDeleteTask(this.props.task.id);\r\n  };\r\n  onEditTask = () => {\r\n    this.props.onEditTask(this.props.task);\r\n  };\r\n  onChangeStatus = () => {\r\n    this.props.onChangeStatus(this.props.task.id);\r\n  };\r\n  render() {\r\n    let { task, stt } = this.props;\r\n    return (\r\n      <tr>\r\n        <th scope=\"row\" className = \"task__num\">{stt + 1}</th>\r\n        <td className = \"task__name\">{task.taskName}</td>\r\n        <td className = \"task__status\">\r\n          <button\r\n            className={\r\n              task.taskStatus === \"Cao\" ? \"btn btn-danger\" : \"btn btn-warning\"\r\n            }\r\n            onClick={this.onChangeStatus}\r\n          >\r\n            {task.taskStatus}\r\n          </button>\r\n        </td>\r\n        <td className = \"task__button\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success mr-2\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#taskModal\"\r\n            onClick={this.onEditTask}\r\n          >\r\n            Sửa\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={this.onDeleteTask}\r\n          >\r\n            Xóa\r\n          </button>\r\n        </td>\r\n        <td>{task.taskNote}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TaskItem from \"../TaskItem/TaskItem\";\r\nimport * as action from \"../../Actions/taskActions\";\r\nimport _ from \"lodash\";\r\n\r\nclass TaskList extends Component {\r\n  renderTask = () => {\r\n    let { TaskList, keyWord, SortTask } = this.props;\r\n    if (SortTask.by === \"name\") {\r\n      TaskList.sort((a, b) => {\r\n        if (a.taskName.toLowerCase() > b.taskName.toLowerCase())\r\n          return SortTask.value;\r\n        else if (a.taskName.toLowerCase() < b.taskName.toLowerCase())\r\n          return -SortTask.value;\r\n        else return 0;\r\n      });\r\n    } else {\r\n      TaskList.sort((a, b) => {\r\n        if (a.taskStatus > b.taskStatus) return -SortTask.value;\r\n        else if (a.taskStatus < b.taskStatus) return SortTask.value;\r\n        else return 0;\r\n      });\r\n    }\r\n    if (keyWord) {\r\n      let SearchList = [...TaskList];\r\n      SearchList = SearchList.filter(task => {\r\n        return (\r\n          task.taskName.toLowerCase().indexOf(keyWord.toLowerCase()) !== -1\r\n        );\r\n      });\r\n      if (!_.isEmpty(SearchList)) {\r\n        TaskList = SearchList;\r\n        return TaskList.map((task, index) => {\r\n          return <TaskItem key={task.id} stt={index} task={task} />;\r\n        });\r\n      } else {\r\n        return (\r\n          <tr>\r\n            <td colSpan=\"5\" className=\"text-center\">\r\n              Không tìm thấy!!!\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    }\r\n    return TaskList.map((task, index) => {\r\n      return (\r\n        <TaskItem\r\n          key={task.id}\r\n          stt={index}\r\n          task={task}\r\n          onChangeStatus={this.props.onChangeStatus}\r\n          onDeleteTask={this.props.onDeleteTask}\r\n          onEditTask={this.props.onEditTask}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"form_list\">\r\n        <table className=\"table table-striped task__table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Tên công việc</th>\r\n              <th scope=\"col\">Mức độ</th>\r\n              <th scope=\"col\">Thao tác</th>\r\n              <th scope=\"col\">Ghi chú</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n        <div className=\"task__item\">\r\n          <table className=\"table table-striped task__table task__table1\">\r\n            <tbody>{this.renderTask()}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    TaskList: state.TaskList,\r\n    keyWord: state.keyWord,\r\n    SortTask: state.SortTask\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatchEvent => {\r\n  return {\r\n    onDeleteTask: id => {\r\n      dispatchEvent(action.deleteTask(id));\r\n    },\r\n    onEditTask: id => {\r\n      dispatchEvent(action.editTask(id));\r\n    },\r\n    onChangeStatus: id => {\r\n      dispatchEvent(action.changeStatus(id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\r\n","import React, { Component } from \"react\";\r\nimport SearchTask from \"./Search/SearchTask\";\r\nimport SortTask from \"./Sort/SortTask\";\r\nimport TaskModal from \"./TaskModal/TaskModal\";\r\nimport TaskList from \"./TaskList/TaskList\";\r\n\r\nexport default class TaskControl extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bg_body\">\r\n        <div className=\"container\">\r\n          <h1>to do list</h1>\r\n          <div className=\"form_input\">\r\n            <div className=\"row m-0\">\r\n              <SearchTask />\r\n              <SortTask />\r\n              <TaskModal />\r\n            </div>\r\n          </div>\r\n          <TaskList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport TaskControl from './Components/TaskControl';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaskControl />\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const uuidv4 = require(\"uuid/v4\");\r\nlet data = JSON.parse(localStorage.getItem('TaskList'));\r\n\r\nconst initialState = data ? data : [];\r\nconst TaskListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SAVE_TASK\":\r\n            let newTaskList = [...state];\r\n            let newTask = {\r\n                id: action.newTask.id,\r\n                taskName: action.newTask.taskName,\r\n                taskStatus: action.newTask.taskStatus,\r\n                taskNote: action.newTask.taskNote,\r\n            };\r\n            if (!newTask.id) {\r\n                newTask.id = uuidv4();\r\n                newTaskList = [...newTaskList, newTask];\r\n            } else {\r\n                let index = newTaskList.findIndex((task) => task.id === action.newTask.id);\r\n                newTaskList[index] = newTask;\r\n            }\r\n            localStorage.setItem('TaskList', JSON.stringify(newTaskList))\r\n            return newTaskList;\r\n        case \"CHANGE_STATUS_TASK\":\r\n            let newState = [...state];\r\n            let index = newState.findIndex((task) => task.id === action.id);\r\n            newState[index].taskStatus = newState[index].taskStatus === \"Cao\" ? \"Thấp\" : \"Cao\";\r\n            localStorage.setItem('TaskList', JSON.stringify(newState))\r\n            return newState;\r\n        case \"DELETE_TASK\":\r\n            let newStateAfterDel = state.filter(task => task.id !== action.id);\r\n            localStorage.setItem('TaskList', JSON.stringify(newStateAfterDel))\r\n            return newStateAfterDel;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default TaskListReducer;","const initialState = \"\";\r\n\r\nconst SearchTask = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SEARCH\":\r\n            console.log(action.keyWord)\r\n            return action.keyWord;\r\n        default:\r\n           return state;\r\n    }\r\n}\r\nexport default SearchTask;","const initialState = {\r\n    by: 'status',\r\n    value: -1\r\n}\r\n\r\nconst SortTask = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SORT\":\r\n            return action.SortTask;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default SortTask;\r\n","const initialState = {};\r\n\r\nconst EditTask = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"EDIT_TASK\":\r\n            return action.task\r\n        case \"REMOVE_EDIT_TASK\":\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default EditTask;","import { combineReducers } from \"redux\";\r\nimport TaskList from './TaskListReducer';\r\nimport keyWord from \"./SearchTaskReducer\";\r\nimport SortTask from \"./SortTaskReducer\";\r\nimport SelectedTask from \"./EditTaskReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    TaskList,\r\n    keyWord,\r\n    SortTask,\r\n    SelectedTask,\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './Reducers/rootReducer';\n\n\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}